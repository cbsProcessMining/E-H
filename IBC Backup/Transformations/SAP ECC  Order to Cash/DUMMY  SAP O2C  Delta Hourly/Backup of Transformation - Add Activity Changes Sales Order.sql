/*DESCRIPTION:
1. Transformation Description:
This transformation creates the following activities: Partially approve Credit Check, Change Delivery Block, Set Delivery Block, Deny Credit Check, Remove Delivery Block, Approve Credit Check













2. Required Tables:
TMP_O2C_CDHDR_CDPOS
TMP_O2C_VBAK_VBAP
USR02

3. Required Columns:
TMP_CHANGE.CHANGENR
TMP_CHANGE.EVENTTIME
TMP_CHANGE.FNAME
TMP_CHANGE.MANDANT
TMP_CHANGE.TABKEY
TMP_CHANGE.TABNAME
TMP_CHANGE.TCODE
TMP_CHANGE.USERNAME
TMP_CHANGE.VALUE_NEW
TMP_CHANGE.VALUE_OLD
TMP_O2C_CDHDR_CDPOS.LTRIM
TMP_O2C_CDHDR_CDPOS.TMP_O2C_CDHDR_CDPOS
TMP_O2C_CDHDR_CDPOS.USR02
USR02.BNAME
USR02.MANDT
USR02.USTYP
V_ORDERS.MANDT
V_ORDERS.POSNR
V_ORDERS.TABKEY_VBAK
V_ORDERS.VBELN
...
Contact App Store support for the complete list.

4. Columns used for timestamp:
TMP_CHANGE.EVENTTIME

5. Parameters used in where clause:
None

6. Parameters used in joins:
None
*/
INSERT INTO "_CEL_O2C_ACTIVITIES" (
	"_CASE_KEY",
	"ACTIVITY_DE",
	"ACTIVITY_EN",
	"EVENTTIME",
	"_SORTING",
	"USER_NAME",
	"USER_TYPE",
	"CHANGED_TABLE",
	"CHANGED_FIELD",
	"CHANGED_FROM",
	"CHANGED_TO",
	"CHANGE_NUMBER",
	"TRANSACTION_CODE",
	"MANDT",
	"VBELN",
	"POSNR",
    "_ACTIVITY_KEY")
SELECT 
	"V_ORDERS"."_CASE_KEY" AS "_CASE_KEY"
	,CASE 
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'A' THEN 'Gebe Kredit frei' 
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'B' THEN 'Setze Kreditstatus (Sperre)'
		--WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'C' THEN 'Gebe Kredit teilweise frei' 
        WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'D' THEN 'Entferne Kreditstatus (Sperre)'    
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Setze Liefersperre'
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Ändere Liefersperre' 
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 'Entferne Liefersperre'
        WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Setze Fakturasperre'
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Ändere Fakturasperre' 
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 'Entferne Fakturasperre'
 	 END AS  "ACTIVITY_DE"
 	 ,CASE 
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'A' THEN 'Pass Credit' 
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'B' THEN 'Set Credit Hold'
		--WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'C' THEN 'Partially Pass Credit'  
        WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'D' THEN 'Release Credit Hold'
        WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Set Delivery Block'
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Change Delivery Block' 
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 'Remove Delivery Block'
        WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Set Billing Block'
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 'Change Billing Block' 
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 'Remove Billing Block'
 	 END AS  "ACTIVITY_EN"
	, "TMP_CHANGE"."EVENTTIME" AS "EVENTTIME"
	,50 +
	CASE 
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'A' THEN 101
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'B' THEN 102
       -- WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'D' THEN 103
		WHEN "TMP_CHANGE"."FNAME" = 'CMGST' AND "TMP_CHANGE"."VALUE_NEW" = 'C' THEN 104
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 5
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 6
 	    WHEN "TMP_CHANGE"."FNAME" = 'LIFSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 7
        WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 8
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NOT NULL THEN 9
 	    WHEN "TMP_CHANGE"."FNAME" = 'FAKSK' AND "TMP_CHANGE"."VALUE_OLD" IS NOT NULL AND "TMP_CHANGE"."VALUE_NEW" IS NULL THEN 10
 	 END AS "_SORTING"
	,"TMP_CHANGE"."USERNAME" AS "USER_NAME"
	,"USR02"."USTYP" AS "USER_TYPE"
	,"TMP_CHANGE"."TABNAME" AS "CHANGED_TABLE"
	,"TMP_CHANGE"."FNAME" AS "CHANGED_FIELD"
	,"TMP_CHANGE"."VALUE_OLD" AS "CHANGED_FROM"
    ,"TMP_CHANGE"."VALUE_NEW" AS "CHANGED_TO"
	,"TMP_CHANGE"."CHANGENR" AS "CHANGE_NUMBER"
	,"TMP_CHANGE"."TCODE" AS "TRANSACTION_CODE"
	,"V_ORDERS"."MANDT" AS "MANDT"
	,"V_ORDERS"."VBELN" AS "VBELN"
	,"V_ORDERS"."POSNR" AS "POSNR"
    ,"TMP_CHANGE"."MANDANT" || "TMP_CHANGE"."OBJECTCLAS" || "TMP_CHANGE"."OBJECTID" || "TMP_CHANGE"."CHANGENR" AS "_ACTIVITY_KEY"
FROM 
	"TMP_O2C_VBAK_VBAP" AS "V_ORDERS"
	JOIN "TMP_O2C_CDHDR_CDPOS" AS "TMP_CHANGE" ON
		"TMP_CHANGE"."MANDANT" =  "V_ORDERS"."MANDT" AND
		"TMP_CHANGE"."TABKEY" = "V_ORDERS"."TABKEY_VBAK"
	LEFT JOIN "USR02" AS "USR02" ON
		"USR02"."MANDT" = "TMP_CHANGE"."MANDANT" AND
		"USR02"."BNAME" = "TMP_CHANGE"."USERNAME"
WHERE 
	"TMP_CHANGE"."TABNAME" IN ('VBUK', 'VBAK') AND
	(("TMP_CHANGE"."FNAME" = 'CMGST' AND 
	"TMP_CHANGE"."VALUE_NEW" IS NOT NULL) OR
	"TMP_CHANGE"."FNAME" IN ('LIFSK','FAKSK'))
    --The following snippet can be used to filter out header activities before line creation
    --AND CAST("V_ORDERS"."ERDAT" AS DATE) + CAST("V_ORDERS"."ERZET" AS TIME) <= "TMP_CHANGE"."EVENTTIME"
;
