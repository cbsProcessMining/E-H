/*DESCRIPTION:
1. Transformation Description:
This transformation creates the following activities: Change Reason for Rejection, Change Plant, Change Material, Change Delivery Amount, Change Route, Book Delivery Shortage, Change Price, Change Division, Cancel Reason for Rejection, Set Reason for Rejection













2. Required Tables:
CDHDR
CDPOS
T001
TCURF_CC
TCURR_CC
TCURX
TMP_O2C_VBAK_VBAP
USR02

3. Required Columns:
CDHDR.CHANGENR
CDHDR.CHNGIND
CDHDR.CONCAT
CDHDR.FNAME
CDHDR.LTRIM
CDHDR.MANDANT
CDHDR.OBJECTCLAS
CDHDR.OBJECTID
CDHDR.TABKEY
CDHDR.TABNAME
CDHDR.TCODE
CDHDR.UDATE
CDHDR.USERNAME
CDHDR.UTIME
CDPOS.CHANGENR
CDPOS.CHNGIND
CDPOS.FNAME
CDPOS.MANDANT
CDPOS.OBJECTCLAS
CDPOS.OBJECTID
...
Contact App Store support for the complete list.

4. Columns used for timestamp:
CDHDR.UDATE
CDHDR.UTIME

5. Parameters used in where clause:
jcdsUpdate

6. Parameters used in joins:
exchangeRateType
currency
*/
INSERT INTO _CEL_O2C_ACTIVITIES (
    "SCHEMA", --- global job
    "PRETTY_NAME", -- global job
    "SC/PC", -- global job
	"_CASE_KEY",
	"ACTIVITY_DE",
	"ACTIVITY_EN",
	"EVENTTIME",
	"_SORTING",
	"USER_NAME",
	"USER_TYPE",
	"CHANGED_TABLE",
	"CHANGED_FIELD",
	"CHANGED_FROM",
	"CHANGED_TO",
	"CHANGED_FROM_FLOAT",
	"CHANGED_TO_FLOAT",
	"CHANGE_NUMBER",
	"TRANSACTION_CODE",
	"MANDT",
	"VBELN",
	"POSNR",
    "_ACTIVITY_KEY")
SELECT
    V_ORDERS."SCHEMA",
    V_ORDERS."PRETTY_NAME", -- global job
    V_ORDERS."SC/PC", -- global job
	V_ORDERS._CASE_KEY AS _CASE_KEY
	,CASE 
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 'Setze Absagegrund'
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 'Ändere Absagegrund' 
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NULL THEN 'Entferne Absagegrund'   
 	    WHEN CDPOS.FNAME = 'NETPR' THEN 'Ändere Preis'
 	    WHEN CDPOS.FNAME = 'SPART' THEN 'Ändere Sparte'
        --WHEN CDPOS.FNAME = 'LFMNG' AND CDPOS.VALUE_NEW = '0' THEN 'Buche Fehlmenge'
		--WHEN CDPOS.FNAME = 'LFMNG' THEN 'Ändere Liefermenge'
		WHEN CDPOS.FNAME = 'MATNR' THEN 'Ändere Materialnummer'
		WHEN CDPOS.FNAME = 'WERKS' THEN 'Ändere Werk'
		WHEN CDPOS.FNAME = 'ROUTE' THEN 'Ändere Route'
        WHEN CDPOS.FNAME = 'ZZPRBU' THEN 'Ändere Produzierenden Buchungskreis'
        WHEN CDPOS.FNAME = 'ZZDLZ' THEN 'Ändere Direktlieferungskennzeichen'
        WHEN CDPOS.FNAME = 'ZZBST' THEN 'Ändere Konfiguration'
        when CDPOS.FNAME = 'ZZLFBEST' and V_ORDERS."SC/PC" = 'SC' THEN 'Änderung Bestätigungsfall'
 	  END AS  "ACTIVITY_DE"
	,CASE 
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 'Set Reason for Rejection'
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 'Change Reason for Rejection' 
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NULL THEN 'Cancel Reason for Rejection'   
 	    WHEN CDPOS.FNAME = 'NETPR' THEN 'Change Price'
 	    WHEN CDPOS.FNAME = 'SPART' THEN 'Change Division'
		--WHEN CDPOS.FNAME = 'LFMNG' AND CDPOS.VALUE_NEW = '0' THEN 'Book Delivery Shortage'
		--WHEN CDPOS.FNAME = 'LFMNG' THEN 'Change Delivery Amount'
		WHEN CDPOS.FNAME = 'MATNR' THEN 'Change Material'
		WHEN CDPOS.FNAME = 'WERKS' THEN 'Change Plant'
		WHEN CDPOS.FNAME = 'ROUTE' THEN 'Change Route'
        WHEN CDPOS.FNAME = 'ZZPRBU' THEN 'Change Producing Company'  
        WHEN CDPOS.FNAME = 'ZZDLZ' THEN 'Change Direct Delivery Indicator'
        WHEN CDPOS.FNAME = 'ZZBST' THEN 'Change Configuration'
        when CDPOS.FNAME = 'ZZLFBEST' and V_ORDERS."SC/PC" = 'SC' THEN 'Changes Confirmation Type'
 	END AS  "ACTIVITY_EN"
	,CAST(CDHDR.UDATE AS DATE) + CAST(ISNULL(CAST(CDHDR.UTIME AS TIME), '23:59:59') AS TIME) AS "EVENTTIME"
	,60 +
	CASE 
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 1
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NOT NULL THEN 2
		WHEN CDPOS.FNAME = 'ABGRU' AND CDPOS.VALUE_OLD IS NOT NULL AND CDPOS.VALUE_NEW IS NULL THEN 3
 	    WHEN CDPOS.FNAME = 'NETPR' THEN 4
 	    WHEN CDPOS.FNAME = 'SPART' THEN 5
		--WHEN CDPOS.FNAME = 'LFMNG' AND CDPOS.VALUE_NEW = '0' THEN 6
		--WHEN CDPOS.FNAME = 'LFMNG' THEN 7
		WHEN CDPOS.FNAME = 'MATNR' THEN 8
		WHEN CDPOS.FNAME = 'WERKS' THEN 9
		WHEN CDPOS.FNAME = 'ROUTE' THEN 10
        WHEN CDPOS.FNAME = 'ZZPRBU' THEN 11
        WHEN CDPOS.FNAME = 'ZZDLZ' THEN 12
        WHEN CDPOS.FNAME = 'ZZBST' THEN 13
        when CDPOS.FNAME = 'ZZLFBEST' and V_ORDERS."SC/PC" = 'SC' THEN 14
 	END AS "_SORTING"
	,CDHDR.USERNAME AS "USER_NAME"
	,USR02.USTYP AS "USER_TYPE"
	,CDPOS.TABNAME AS "CHANGED_TABLE"
	,CDPOS.FNAME AS "CHANGED_FIELD"
	,"CDPOS"."VALUE_OLD" AS "CHANGED_FROM"
    ,"CDPOS"."VALUE_NEW" AS "CHANGED_TO"
	,CASE
		WHEN CDPOS.FNAME = 'NETPR' THEN
		(CASE 
			WHEN V_ORDERS.WAERK = '<%=currency%>' THEN (CASE WHEN CDPOS.VALUE_OLD LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_OLD),'-','')) ELSE CDPOS.VALUE_OLD END)*IFNULL(TCURX.TDEC,1)
         	WHEN TCURR_CC.UKURS < 0 THEN ((CASE WHEN CDPOS.VALUE_OLD LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_OLD),'-','')) ELSE CDPOS.VALUE_OLD END)*IFNULL(TCURX.TDEC,1))*(1/ABS(TCURR_CC.UKURS)/(CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END))*(CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
			WHEN TCURR_CC.UKURS > 0 THEN ((CASE WHEN CDPOS.VALUE_OLD LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_OLD),'-','')) ELSE CDPOS.VALUE_OLD END)*IFNULL(TCURX.TDEC,1))*(TCURR_CC.UKURS/CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END*CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
		END)
		ELSE CAST(NULL AS FLOAT)
	END AS "CHANGED_FROM_FLOAT"
	,CASE
		WHEN CDPOS.FNAME = 'NETPR' THEN
		(CASE 
			WHEN V_ORDERS.WAERK = '<%=currency%>' THEN (CASE WHEN CDPOS.VALUE_NEW LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_NEW),'-','')) ELSE CDPOS.VALUE_NEW END)*IFNULL(TCURX.TDEC,1) 
         	WHEN TCURR_CC.UKURS < 0 THEN ((CASE WHEN CDPOS.VALUE_NEW LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_NEW),'-','')) ELSE CDPOS.VALUE_NEW END)*IFNULL(TCURX.TDEC,1))*(1/ABS(TCURR_CC.UKURS)/(CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END))*(CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
			WHEN TCURR_CC.UKURS > 0 THEN ((CASE WHEN CDPOS.VALUE_NEW LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_NEW),'-','')) ELSE CDPOS.VALUE_NEW END)*IFNULL(TCURX.TDEC,1))*(TCURR_CC.UKURS/CASE WHEN COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.FFACT, TCURR_CC.FFACT) END*CASE WHEN COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT, 0) = 0 THEN 1 ELSE COALESCE(TCURF_CC.TFACT, TCURR_CC.TFACT) END)
		END)
		ELSE CAST(NULL AS FLOAT)
	END AS "CHANGED_TO_FLOAT"
	,CDPOS.CHANGENR AS "CHANGE_NUMBER"
	,CDHDR.TCODE AS "TRANSACTION_CODE"
	,V_ORDERS.MANDT AS "MANDT"
	,V_ORDERS.VBELN AS "VBELN"
	,V_ORDERS.POSNR AS "POSNR"
    ,V_ORDERS."PRETTY_NAME"||"CDHDR"."MANDANT" || "CDHDR"."OBJECTCLAS" || "CDHDR"."OBJECTID" || "CDHDR"."CHANGENR" AS "_ACTIVITY_KEY" -- global job
FROM
	TMP_O2C_VBAK_VBAP AS V_ORDERS
	JOIN (SELECT
        "SCHEMA", -- global job
        "MANDANT",
        "OBJECTCLAS",
        "OBJECTID",
        "CHANGENR",
        "TABNAME",
        "TABKEY",
        "FNAME",
        "CHNGIND",
        CASE WHEN CDPOS.VALUE_NEW LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_NEW),'-','')) ELSE CDPOS.VALUE_NEW END
         AS "VALUE_NEW",
        CASE WHEN CDPOS.VALUE_OLD LIKE '%-' THEN CONCAT('-',REPLACE(LTRIM(CDPOS.VALUE_OLD),'-','')) ELSE CDPOS.VALUE_OLD END
         AS "VALUE_OLD"
        from CDPOS) AS CDPOS ON 1=1
        AND "CDPOS"."SCHEMA" = "V_ORDERS"."SCHEMA" -- global job    
	    AND CDPOS.MANDANT = V_ORDERS.MANDT
	    AND CDPOS.TABKEY = V_ORDERS."MANDT"||V_ORDERS.VBELN || V_ORDERS.POSNR  -- global Anpassung, da Case KEY nun SCHEMA im Aufriss hat
        AND CDPOS.CHNGIND = '<%=jcdsUpdate%>'
	    AND CDPOS.FNAME IN ('ABGRU', 'NETPR', 'SPART', 'LFMNG', 'MATNR', 'WERKS', 'ROUTE', 'ZZPRBU','ZZDLZ','ZZBST', 'ZZLFBEST')
	    AND CDPOS.TABNAME = 'VBAP'
	JOIN CDHDR AS CDHDR ON
        "CDPOS"."SCHEMA" = "CDHDR"."SCHEMA" AND -- global job 
		CDPOS.MANDANT = CDHDR.MANDANT
		AND CDPOS.OBJECTCLAS = CDHDR.OBJECTCLAS
		AND CDPOS.OBJECTID = CDHDR.OBJECTID
		AND CDPOS.CHANGENR = CDHDR.CHANGENR
	LEFT JOIN USR02 AS USR02 ON
        "USR02"."SCHEMA" = "CDHDR"."SCHEMA" AND -- global job
		USR02.MANDT = CDHDR.MANDANT AND
		USR02.BNAME = CDHDR.USERNAME
    LEFT JOIN TCURR_CC AS TCURR_CC ON 1=1
        AND TCURR_CC."SCHEMA" = V_ORDERS."SCHEMA" -- global job
	    AND TCURR_CC.MANDT = V_ORDERS.MANDT
	    AND TCURR_CC.TCURR = '<%=currency%>'
		AND TCURR_CC.FCURR = V_ORDERS.WAERK
		AND TCURR_CC.KURST = '<%=exchangeRateType%>'
		AND V_ORDERS.ERDAT >= TCURR_CC.VALID_START AND V_ORDERS.ERDAT < TCURR_CC.VALID_END
	LEFT JOIN TCURF_CC AS TCURF_CC ON 1=1
        AND "TCURR_CC"."SCHEMA" = "TCURF_CC"."SCHEMA" -- global job
		AND TCURR_CC.MANDT = TCURF_CC.MANDT
		AND TCURR_CC.TCURR = TCURF_CC.TCURR
		AND TCURR_CC.FCURR = TCURF_CC.FCURR
		AND TCURR_CC.KURST = TCURF_CC.KURST
		AND V_ORDERS.ERDAT >= TCURF_CC.VALID_START	
		AND V_ORDERS.ERDAT < TCURF_CC.VALID_END
	LEFT JOIN (
		SELECT 
            "TCURX"."SCHEMA", -- global job
			TCURX.CURRKEY
			,CAST(TCURX.CURRDEC AS INT) AS CURRDEC
			,POWER(CAST(10 AS FLOAT),(2-CURRDEC)) AS TDEC 
		FROM 
			TCURX) AS TCURX ON 1=1
		AND TCURR_CC.FCURR = TCURX.CURRKEY
        AND TCURR_CC."SCHEMA" = "TCURX"."SCHEMA" -- global job
        
    --The following snippet can be used to filter out header activities before line creation
    --WHERE CAST("V_ORDERS"."ERDAT" AS DATE) + CAST("V_ORDERS"."ERZET" AS TIME)
    --<= CAST("CDHDR"."UDATE" AS DATE) + CAST(CDHDR.UTIME AS TIME) 
